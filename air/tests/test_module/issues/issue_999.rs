/*
 * Copyright 2022 Fluence Labs Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

use air_test_utils::prelude::*;

const PREV_DATA: &str = r#"{"trace":[{"call":{"executed":{"scalar":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE"}}},{"call":{"executed":{"scalar":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc"}}},{"call":{"executed":{"scalar":"some_value"}}},{"call":{"executed":{"scalar":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v"}}},{"call":{"executed":{"scalar":["id"]}}},{"ap":{"gens":[0]}},{"call":{"executed":{"scalar":1665506843}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","tetraplet":{"function_name":"-relay-","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":"getDataSrv"},"trace_pos":5}]}}},{"call":{"executed":{"scalar":[109,198,222,202,133,116,16,233,252,153,13,6,152,166,81,237,88,107,215,47,37,96,5,113,43,90,102,248,164,151,16,35]}}},{"call":{"executed":{"scalar":{"error":[],"signature":[[157,10,75,157,224,190,235,95,105,91,236,31,212,174,224,97,226,246,65,6,75,212,4,89,126,92,93,100,61,16,197,45,131,20,125,170,170,138,87,102,93,50,207,220,143,93,237,162,240,221,180,100,253,105,79,231,135,55,141,69,23,160,69,4]],"success":true}}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","tetraplet":{"function_name":"-relay-","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":"getDataSrv"},"trace_pos":5}]}}},{"call":{"executed":{"stream":{"value":{"issued_by":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","issuer_signature":[157,10,75,157,224,190,235,95,105,91,236,31,212,174,224,97,226,246,65,6,75,212,4,89,126,92,93,100,61,16,197,45,131,20,125,170,170,138,87,102,93,50,207,220,143,93,237,162,240,221,180,100,253,105,79,231,135,55,141,69,23,160,69,4],"key_id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","relay_id":["12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE"],"service_id":["id"],"solution":[],"timestamp_issued":1665506843,"value":"some_value"},"generation":0}}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":{"issued_by":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","issuer_signature":[157,10,75,157,224,190,235,95,105,91,236,31,212,174,224,97,226,246,65,6,75,212,4,89,126,92,93,100,61,16,197,45,131,20,125,170,170,138,87,102,93,50,207,220,143,93,237,162,240,221,180,100,253,105,79,231,135,55,141,69,23,160,69,4],"key_id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","relay_id":["12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE"],"service_id":["id"],"solution":[],"timestamp_issued":1665506843,"value":"some_value"},"tetraplet":{"function_name":"create_record_metadata","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":"registry"},"trace_pos":11}]}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[]}}},{"call":{"executed":{"scalar":1665506844}}},{"call":{"executed":{"scalar":[227,176,196,66,152,252,28,20,154,251,244,200,153,111,185,36,39,174,65,228,100,155,147,76,164,149,153,27,120,82,184,85]}}},{"call":{"executed":{"stream":{"value":{"error":[],"signature":[[231,8,196,58,49,131,29,64,40,242,102,12,151,190,220,169,65,66,93,195,106,200,42,25,178,112,183,67,74,242,113,74,73,112,108,55,0,70,98,2,254,151,132,238,127,180,64,104,254,223,35,170,47,236,174,68,172,201,245,103,109,169,53,14]],"success":true},"generation":0}}}}],"streams":{},"version":"0.2.2","lcid":7,"r_streams":{"$successful":{"476":[0]},"$signature":{"2927":[1]},"$result":{"957":[1]},"$relay_id":{"570":[1]},"$error_get":{"502":[0]},"$error-0":{"899":[0]},"$success":{"528":[0]}}}"#;
const CURRENT_DATA: &str = r#"{"trace":[{"call":{"executed":{"scalar":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE"}}},{"call":{"executed":{"scalar":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc"}}},{"call":{"executed":{"scalar":"some_value"}}},{"call":{"executed":{"scalar":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v"}}},{"call":{"executed":{"scalar":["id"]}}},{"ap":{"gens":[0]}},{"call":{"executed":{"scalar":1665506843}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","tetraplet":{"function_name":"-relay-","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":"getDataSrv"},"trace_pos":5}]}}},{"call":{"executed":{"scalar":[109,198,222,202,133,116,16,233,252,153,13,6,152,166,81,237,88,107,215,47,37,96,5,113,43,90,102,248,164,151,16,35]}}},{"call":{"executed":{"scalar":{"error":[],"signature":[[157,10,75,157,224,190,235,95,105,91,236,31,212,174,224,97,226,246,65,6,75,212,4,89,126,92,93,100,61,16,197,45,131,20,125,170,170,138,87,102,93,50,207,220,143,93,237,162,240,221,180,100,253,105,79,231,135,55,141,69,23,160,69,4]],"success":true}}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","tetraplet":{"function_name":"-relay-","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":"getDataSrv"},"trace_pos":5}]}}},{"call":{"executed":{"stream":{"value":{"issued_by":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","issuer_signature":[157,10,75,157,224,190,235,95,105,91,236,31,212,174,224,97,226,246,65,6,75,212,4,89,126,92,93,100,61,16,197,45,131,20,125,170,170,138,87,102,93,50,207,220,143,93,237,162,240,221,180,100,253,105,79,231,135,55,141,69,23,160,69,4],"key_id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","relay_id":["12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE"],"service_id":["id"],"solution":[],"timestamp_issued":1665506843,"value":"some_value"},"generation":0}}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":{"issued_by":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","issuer_signature":[157,10,75,157,224,190,235,95,105,91,236,31,212,174,224,97,226,246,65,6,75,212,4,89,126,92,93,100,61,16,197,45,131,20,125,170,170,138,87,102,93,50,207,220,143,93,237,162,240,221,180,100,253,105,79,231,135,55,141,69,23,160,69,4],"key_id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","relay_id":["12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE"],"service_id":["id"],"solution":[],"timestamp_issued":1665506843,"value":"some_value"},"tetraplet":{"function_name":"create_record_metadata","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":"registry"},"trace_pos":11}]}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[]}}},{"call":{"executed":{"scalar":1665506844}}},{"call":{"executed":{"scalar":[227,176,196,66,152,252,28,20,154,251,244,200,153,111,185,36,39,174,65,228,100,155,147,76,164,149,153,27,120,82,184,85]}}},{"call":{"executed":{"stream":{"value":{"error":[],"signature":[[231,8,196,58,49,131,29,64,40,242,102,12,151,190,220,169,65,66,93,195,106,200,42,25,178,112,183,67,74,242,113,74,73,112,108,55,0,70,98,2,254,151,132,238,127,180,64,104,254,223,35,170,47,236,174,68,172,201,245,103,109,169,53,14]],"success":true},"generation":0}}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":{"error":[],"signature":[[231,8,196,58,49,131,29,64,40,242,102,12,151,190,220,169,65,66,93,195,106,200,42,25,178,112,183,67,74,242,113,74,73,112,108,55,0,70,98,2,254,151,132,238,127,180,64,104,254,223,35,170,47,236,174,68,172,201,245,103,109,169,53,14]],"success":true},"tetraplet":{"function_name":"sign","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":"sig"},"trace_pos":16}]}}},{"call":{"executed":{"scalar":"KJEWoy9Us5mFyUUqx5Ukzr7KKGgwrgu14oY6Ai67J5rLMAbERadtSeQz8AZQ"}}},{"call":{"executed":{"scalar":["12D3KooWHCJbJKGDfCgHSoCuK9q4STyRnVveqLoXAPBbXHTZx9Cv","12D3KooWDcpWuyrMTDinqNgmXAuRdfd2mTdY9VoXZSAet2pDzh6r","12D3KooWMigkP4jkVyufq5JnDJL6nXvyjeaDNpRfEZqQhsG3sYCU","12D3KooWAKNos2KogexTXhrkMZzFYpLHuWJ4PgoAhurSAv7o5CWA","12D3KooWMMGdfVEJ1rWe1nH1nehYDzNEHhg5ogdfiGk88AupCMnf"]}}},{"par":[25,0]},{"par":[4,20]},{"call":{"executed":{"scalar":{"error":"","key":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"success":true}}}},{"ap":{"gens":[3]}},{"ap":{"gens":[3]}},{"call":{"executed":{"scalar":""}}},{"par":[4,15]},{"call":{"executed":{"scalar":{"error":"","key":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"success":true}}}},{"ap":{"gens":[4]}},{"ap":{"gens":[4]}},{"call":{"executed":{"scalar":""}}},{"par":[4,10]},{"call":{"executed":{"scalar":{"error":"","key":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"success":true}}}},{"ap":{"gens":[2]}},{"ap":{"gens":[2]}},{"call":{"executed":{"scalar":""}}},{"par":[4,5]},{"call":{"executed":{"scalar":{"error":"","key":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"success":true}}}},{"ap":{"gens":[1]}},{"ap":{"gens":[1]}},{"call":{"executed":{"scalar":""}}},{"par":[4,0]},{"call":{"executed":{"scalar":{"error":"","key":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"success":true}}}},{"ap":{"gens":[0]}},{"ap":{"gens":[0]}},{"call":{"executed":{"scalar":""}}},{"par":[19,1]},{"call":{"executed":{"scalar":0}}},{"fold":{"lore":[{"pos":44,"desc":[{"pos":49,"len":3},{"pos":52,"len":0}]},{"pos":39,"desc":[{"pos":52,"len":3},{"pos":55,"len":0}]},{"pos":34,"desc":[{"pos":55,"len":3},{"pos":58,"len":0}]},{"pos":24,"desc":[{"pos":58,"len":3},{"pos":61,"len":0}]},{"pos":29,"desc":[{"pos":61,"len":3},{"pos":64,"len":0}]}]}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[0]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":44}]}}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[1]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":47},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":50}]}}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[2]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":50},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":53},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":56}]}}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[3]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":50},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":53},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":56},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":59}]}}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[4]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":50},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":53},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":56},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":59},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":62}]}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":44}]}}},{"ap":{"gens":[0]}},{"call":{"sent_by":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE: 9"}},{"fold":{"lore":[{"pos":65,"desc":[{"pos":68,"len":3},{"pos":71,"len":0}]}]}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[0]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":"ok","tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":65}]}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":"ok","tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":65}]}}},{"ap":{"gens":[0]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":68}]}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"tetraplet":{"function_name":"get_key_metadata","json_path":".$.key","peer_pk":"12D3KooWMMGdfVEJ1rWe1nH1nehYDzNEHhg5ogdfiGk88AupCMnf","service_id":"registry"},"trace_pos":43},{"result":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"tetraplet":{"function_name":"get_key_metadata","json_path":".$.key","peer_pk":"12D3KooWAKNos2KogexTXhrkMZzFYpLHuWJ4PgoAhurSAv7o5CWA","service_id":"registry"},"trace_pos":38},{"result":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"tetraplet":{"function_name":"get_key_metadata","json_path":".$.key","peer_pk":"12D3KooWMigkP4jkVyufq5JnDJL6nXvyjeaDNpRfEZqQhsG3sYCU","service_id":"registry"},"trace_pos":33},{"result":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"tetraplet":{"function_name":"get_key_metadata","json_path":".$.key","peer_pk":"12D3KooWHCJbJKGDfCgHSoCuK9q4STyRnVveqLoXAPBbXHTZx9Cv","service_id":"registry"},"trace_pos":23},{"result":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"tetraplet":{"function_name":"get_key_metadata","json_path":".$.key","peer_pk":"12D3KooWDcpWuyrMTDinqNgmXAuRdfd2mTdY9VoXZSAet2pDzh6r","service_id":"registry"},"trace_pos":28}]}}},{"call":{"executed":{"scalar":{"error":"","key":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"success":true}}}},{"ap":{"gens":[0]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":{"challenge":[],"challenge_type":"","id":"8FivTFMUxqKUdd5jcKdngfdDYH23ko61WfWJB5Lm5sKc","label":"some_label","owner_peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","signature":[19,104,134,36,160,158,172,7,159,183,52,116,16,25,217,42,251,45,4,89,79,40,76,125,199,207,215,67,183,154,234,30,46,194,36,95,64,30,87,25,34,101,212,60,130,55,211,231,55,234,66,142,67,28,179,114,90,60,54,183,28,229,42,3],"timestamp_created":1665496440},"tetraplet":{"function_name":"merge_keys","json_path":".$.key","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":"registry"},"trace_pos":76}]}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[]}}},{"ap":{"gens":[0]}},{"call":{"executed":{"scalar":""}}},{"call":{"executed":{"scalar":""}}},{"call":{"executed":{"scalar":"KJEWoy9Us5mFyUUqx5Ukzr7KKGgwrgu14oY6Ai67J5rLMAbERadtSeQz8AZQ"}}},{"call":{"executed":{"scalar":["12D3KooWHCJbJKGDfCgHSoCuK9q4STyRnVveqLoXAPBbXHTZx9Cv","12D3KooWDcpWuyrMTDinqNgmXAuRdfd2mTdY9VoXZSAet2pDzh6r","12D3KooWMigkP4jkVyufq5JnDJL6nXvyjeaDNpRfEZqQhsG3sYCU","12D3KooWAKNos2KogexTXhrkMZzFYpLHuWJ4PgoAhurSAv7o5CWA","12D3KooWMMGdfVEJ1rWe1nH1nehYDzNEHhg5ogdfiGk88AupCMnf"]}}},{"par":[50,0]},{"par":[9,40]},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"par":[0,0]},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"ap":{"gens":[2]}},{"call":{"executed":{"scalar":""}}},{"par":[9,30]},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"par":[0,0]},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"ap":{"gens":[4]}},{"call":{"sent_by":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE: 37"}},{"par":[9,20]},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"par":[0,0]},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"ap":{"gens":[0]}},{"call":{"executed":{"scalar":""}}},{"par":[9,10]},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"par":[0,0]},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"ap":{"gens":[1]}},{"call":{"executed":{"scalar":""}}},{"par":[9,0]},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"call":{"executed":{"scalar":1665506845}}},{"call":{"executed":{"scalar":{"error":"","peer_id":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","success":true,"weight":0}}}},{"par":[0,0]},{"call":{"executed":{"scalar":{"error":"","success":true}}}},{"ap":{"gens":[3]}},{"call":{"sent_by":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE: 35"}},{"par":[15,1]},{"call":{"executed":{"scalar":0}}},{"fold":{"lore":[{"pos":113,"desc":[{"pos":138,"len":3},{"pos":141,"len":0}]},{"pos":123,"desc":[{"pos":141,"len":3},{"pos":144,"len":0}]},{"pos":93,"desc":[{"pos":144,"len":3},{"pos":147,"len":0}]},{"pos":133,"desc":[{"pos":147,"len":1},{"pos":148,"len":0}]},{"pos":103,"desc":[{"pos":148,"len":1},{"pos":149,"len":0}]}]}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[0]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":123}]}}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[1]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":131},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":134}]}}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[2]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":139},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":142},{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":145}]}}},{"call":{"sent_by":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE: 36"}},{"call":{"sent_by":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE: 38"}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":123}]}}},{"ap":{"gens":[0]}},{"call":{"sent_by":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE: 27"}},{"fold":{"lore":[{"pos":150,"desc":[{"pos":153,"len":3},{"pos":156,"len":0}]}]}},{"call":{"executed":{"scalar":1}}},{"ap":{"gens":[0]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":"ok","tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":154}]}}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":"ok","tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":154}]}}},{"ap":{"gens":[0]}},{"canon":{"canonicalized_element":{"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE","service_id":""},"values":[{"result":true,"tetraplet":{"function_name":"","json_path":"","peer_pk":"12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v","service_id":""},"trace_pos":157}]}}},{"ap":{"gens":[0]}},{"fold":{"lore":[{"pos":159,"desc":[{"pos":161,"len":1},{"pos":162,"len":0}]}]}},{"call":{"sent_by":"12D3KooWJ4bTHirdTFNZpCS72TAzwtdmavTBkkEXtzo6wHL25CtE"}}],"streams":{},"version":"0.2.2","lcid":38,"r_streams":{"$relay_id":{"570":[1]},"$signature":{"2927":[1]},"$successful-0_test":{"7972":[5]},"$result-1":{"7604":[1]},"$status-0_test":{"22208":[1]},"$status-0":{"20415":[1]},"$success_test":{"24131":[0]},"$status_test":{"9544":[1]},"$successful":{"476":[5]},"$status":{"7560":[1]},"$success":{"528":[1]},"$error_get":{"502":[1]},"$successful-0":{"5206":[5]},"$error-0":{"899":[0]},"$result":{"957":[1]},"$resources":{"5165":[5]},"$result-6":{"20456":[1]},"$successful_test":{"20786":[3]},"$result-0":{"5251":[1]}}}"#;

//https://github.com/fluencelabs/aquavm/issues/363
#[test]
fn issue_999() {
    let peer_id = "peer_id";
    let mut vm = create_avm(echo_call_service(), peer_id);

    let script = "(xor\n (seq\n  (seq\n   (seq\n    (seq\n     (seq\n      (seq\n       (seq\n        (seq\n         (seq\n          (seq\n           (seq\n            (call %init_peer_id% (\"getDataSrv\" \"-relay-\") [] -relay-)\n            (call %init_peer_id% (\"getDataSrv\" \"a\") [] a)\n           )\n           (call %init_peer_id% (\"getDataSrv\" \"b\") [] b)\n          )\n          (call %init_peer_id% (\"getDataSrv\" \"c\") [] c)\n         )\n         (call %init_peer_id% (\"getDataSrv\" \"d\") [] d)\n        )\n        (new $successful\n         (new $error_get\n          (new $success\n           (seq\n            (new $relay_id\n             (seq\n              (seq\n               (seq\n                (xor\n                 (match c %init_peer_id%\n                  (ap -relay- $relay_id)\n                 )\n                 (call %init_peer_id% (\"op\" \"noop\") [])\n                )\n                (xor\n                 (seq\n                  (new $error-0\n                   (seq\n                    (new $result\n                     (seq\n                      (seq\n                       (seq\n                        (seq\n                         (seq\n                          (call -relay- (\"peer\" \"timestamp_sec\") [] t-0)\n                          (canon -relay- $relay_id  #relay_id_canon)\n                         )\n                         (call -relay- (\"registry\" \"get_record_metadata_bytes\") [a %init_peer_id% t-0 b c #relay_id_canon d []] bytes)\n                        )\n                        (xor\n                         (call %init_peer_id% (\"sig\" \"sign\") [bytes] sig_result)\n                         (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 1])\n                        )\n                       )\n                       (xor\n                        (match sig_result.$.success! true\n                         (xor\n                          (seq\n                           (canon -relay- $relay_id  #relay_id_canon-0)\n                           (call -relay- (\"registry\" \"create_record_metadata\") [a %init_peer_id% t-0 b c #relay_id_canon-0 d [] sig_result.$.signature.[0]!] $result)\n                          )\n                          (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 2])\n                         )\n                        )\n                        (ap sig_result.$.error.[0]! $error-0)\n                       )\n                      )\n                      (canon -relay- $result  #result-fix)\n                     )\n                    )\n                    (canon -relay- $error-0  #error-fix)\n                   )\n                  )\n                  (xor\n                   (match #result-fix []\n                    (seq\n                     (ap false $success)\n                     (ap #error-fix.$.[0]! $error)\n                    )\n                   )\n                   (seq\n                    (seq\n                     (call -relay- (\"peer\" \"timestamp_sec\") [] t)\n                     (new $signature\n                      (seq\n                       (xor\n                        (mismatch #result-fix.$.[0].peer_id! %init_peer_id%\n                         (xor\n                          (xor\n                           (seq\n                            (seq\n                             (ap #result-fix.$.[0]! result-fix_flatten)\n                             (call #result-fix.$.[0].peer_id! (\"registry\" \"get_record_bytes\") [result-fix_flatten t] bytes-0)\n                            )\n                            (call #result-fix.$.[0].peer_id! (\"sig\" \"sign\") [bytes-0] $signature)\n                           )\n                           (seq\n                            (call -relay- (\"op\" \"noop\") [])\n                            (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 3])\n                           )\n                          )\n                          (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 4])\n                         )\n                        )\n                        (xor\n                         (seq\n                          (seq\n                           (ap #result-fix.$.[0]! result-fix_flatten-0)\n                           (call -relay- (\"registry\" \"get_record_bytes\") [result-fix_flatten-0 t] bytess)\n                          )\n                          (xor\n                           (call %init_peer_id% (\"sig\" \"sign\") [bytess] $signature)\n                           (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 5])\n                          )\n                         )\n                         (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 6])\n                        )\n                       )\n                       (canon -relay- $signature  #signature-fix)\n                      )\n                     )\n                    )\n                    (xor\n                     (match #signature-fix.$.[0].success! false\n                      (seq\n                       (ap #signature-fix.$.[0].error.[0]! $error)\n                       (ap false $success)\n                      )\n                     )\n                     (seq\n                      (seq\n                       (seq\n                        (new $resources\n                         (new $successful-0\n                          (new $result-0\n                           (seq\n                            (seq\n                             (seq\n                              (seq\n                               (seq\n                                (call -relay- (\"op\" \"string_to_b58\") [a] k)\n                                (call -relay- (\"kad\" \"neighborhood\") [k [] []] nodes-1)\n                               )\n                               (par\n                                (fold nodes-1 n-0-0\n                                 (par\n                                  (seq\n                                   (xor\n                                    (xor\n                                     (seq\n                                      (call n-0-0 (\"registry\" \"get_key_metadata\") [a] get_result)\n                                      (xor\n                                       (match get_result.$.success! true\n                                        (seq\n                                         (ap get_result.$.key! $resources)\n                                         (ap true $successful-0)\n                                        )\n                                       )\n                                       (seq\n                                        (call n-0-0 (\"op\" \"concat_strings\") [get_result.$.error! \" on \"] e)\n                                        (call n-0-0 (\"op\" \"concat_strings\") [e n-0-0] $error-1)\n                                       )\n                                      )\n                                     )\n                                     (call n-0-0 (\"op\" \"noop\") [])\n                                    )\n                                    (seq\n                                     (call -relay- (\"op\" \"noop\") [])\n                                     (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 7])\n                                    )\n                                   )\n                                   (call -relay- (\"op\" \"noop\") [])\n                                  )\n                                  (next n-0-0)\n                                 )\n                                 (never)\n                                )\n                                (null)\n                               )\n                              )\n                              (new $status\n                               (new $result-1\n                                (seq\n                                 (seq\n                                  (seq\n                                   (par\n                                    (seq\n                                     (seq\n                                      (call -relay- (\"math\" \"sub\") [1 1] sub)\n                                      (new $successful-0_test\n                                       (seq\n                                        (fold $successful-0 s\n                                         (seq\n                                          (seq\n                                           (seq\n                                            (call -relay- (\"math\" \"add\") [sub 1] incr_idx)\n                                            (ap s $successful-0_test)\n                                           )\n                                           (canon -relay- $successful-0_test  #successful-0_iter_canon)\n                                          )\n                                          (xor\n                                           (match #successful-0_iter_canon.length incr_idx\n                                            (null)\n                                           )\n                                           (next s)\n                                          )\n                                         )\n                                         (never)\n                                        )\n                                        (canon -relay- $successful-0_test  #successful-0_result_canon)\n                                       )\n                                      )\n                                     )\n                                     (ap \"ok\" $status)\n                                    )\n                                    (call -relay- (\"peer\" \"timeout\") [6000 \"timeout\"] $status)\n                                   )\n                                   (new $status_test\n                                    (seq\n                                     (fold $status s\n                                      (seq\n                                       (seq\n                                        (seq\n                                         (call -relay- (\"math\" \"add\") [0 1] incr_idx)\n                                         (ap s $status_test)\n                                        )\n                                        (canon -relay- $status_test  #status_iter_canon)\n                                       )\n                                       (xor\n                                        (match #status_iter_canon.length incr_idx\n                                         (null)\n                                        )\n                                        (next s)\n                                       )\n                                      )\n                                      (never)\n                                     )\n                                     (canon -relay- $status_test  #status_result_canon)\n                                    )\n                                   )\n                                  )\n                                  (xor\n                                   (match #status_result_canon.$.[0]! \"ok\"\n                                    (ap true $result-1)\n                                   )\n                                   (ap false $result-1)\n                                  )\n                                 )\n                                 (canon -relay- $result-1  #result-fix-1)\n                                )\n                               )\n                              )\n                             )\n                             (xor\n                              (match #result-fix-1.$.[0]! false\n                               (ap \"resource not found: timeout exceeded\" $error-1)\n                              )\n                              (seq\n                               (seq\n                                (canon -relay- $resources  #resources_canon)\n                                (call -relay- (\"registry\" \"merge_keys\") [#resources_canon] merge_result)\n                               )\n                               (xor\n                                (match merge_result.$.success! true\n                                 (ap merge_result.$.key! $result-0)\n                                )\n                                (ap merge_result.$.error! $error-1)\n                               )\n                              )\n                             )\n                            )\n                            (canon -relay- $result-0  #result-fix-0)\n                           )\n                          )\n                         )\n                        )\n                        (canon -relay- $error-1  #push-to-stream-106)\n                       )\n                       (ap #push-to-stream-106 $error_get)\n                      )\n                      (xor\n                       (match #result-fix-0 []\n                        (xor\n                         (seq\n                          (seq\n                           (canon -relay- $error_get  #error_get_canon)\n                           (fold #error_get_canon e-0-0\n                            (seq\n                             (ap e-0-0 $error)\n                             (next e-0-0)\n                            )\n                           )\n                          )\n                          (ap false $success)\n                         )\n                         (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 8])\n                        )\n                       )\n                       (seq\n                        (seq\n                         (seq\n                          (seq\n                           (seq\n                            (seq\n                             (call -relay- (\"op\" \"noop\") [])\n                             (xor\n                              (mismatch c %init_peer_id%\n                               (xor\n                                (xor\n                                 (seq\n                                  (seq\n                                   (seq\n                                    (seq\n                                     (seq\n                                      (call c (\"peer\" \"timestamp_sec\") [] t-1)\n                                      (ap #result-fix-0.$.[0].owner_peer_id! result-fix-0_flatten)\n                                     )\n                                     (call c (\"trust-graph\" \"get_weight\") [result-fix-0_flatten t-1] weight)\n                                    )\n                                    (ap #result-fix-0.$.[0]! result-fix-0_flatten-0)\n                                   )\n                                   (call c (\"registry\" \"republish_key\") [result-fix-0_flatten-0 weight t-1] result-2)\n                                  )\n                                  (xor\n                                   (match result-2.$.success! false\n                                    (ap result-2.$.error! $error)\n                                   )\n                                   (seq\n                                    (seq\n                                     (seq\n                                      (seq\n                                       (seq\n                                        (call c (\"peer\" \"timestamp_sec\") [] t-2)\n                                        (ap #result-fix.$.[0].issued_by! result-fix_flatten-1)\n                                       )\n                                       (call c (\"trust-graph\" \"get_weight\") [result-fix_flatten-1 t-2] weight-0)\n                                      )\n                                      (par\n                                       (ap #result-fix.$.[0]! result-fix_flatten-2)\n                                       (ap #signature-fix.$.[0].signature.[0]! signature-fix_flatten)\n                                      )\n                                     )\n                                     (call c (\"registry\" \"put_record\") [result-fix_flatten-2 t signature-fix_flatten weight-0 t-2] result-3)\n                                    )\n                                    (xor\n                                     (match result-3.$.success! false\n                                      (seq\n                                       (ap result-3.$.error! $error)\n                                       (ap false $success)\n                                      )\n                                     )\n                                     (call c (\"op\" \"noop\") [])\n                                    )\n                                   )\n                                  )\n                                 )\n                                 (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 9])\n                                )\n                                (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 10])\n                               )\n                              )\n                              (call -relay- (\"op\" \"noop\") [])\n                             )\n                            )\n                            (call -relay- (\"op\" \"string_to_b58\") [a] k-0)\n                           )\n                           (call -relay- (\"kad\" \"neighborhood\") [k-0 [] []] nodes)\n                          )\n                          (par\n                           (fold nodes n-1\n                            (par\n                             (seq\n                              (xor\n                               (xor\n                                (seq\n                                 (seq\n                                  (seq\n                                   (seq\n                                    (seq\n                                     (call n-1 (\"peer\" \"timestamp_sec\") [] t-3)\n                                     (ap #result-fix-0.$.[0].owner_peer_id! result-fix-0_flatten-1)\n                                    )\n                                    (call n-1 (\"trust-graph\" \"get_weight\") [result-fix-0_flatten-1 t-3] weight-1)\n                                   )\n                                   (ap #result-fix-0.$.[0]! result-fix-0_flatten-2)\n                                  )\n                                  (call n-1 (\"registry\" \"republish_key\") [result-fix-0_flatten-2 weight-1 t-3] result-4)\n                                 )\n                                 (xor\n                                  (match result-4.$.success! false\n                                   (ap result-4.$.error! $error)\n                                  )\n                                  (seq\n                                   (seq\n                                    (seq\n                                     (seq\n                                      (seq\n                                       (call n-1 (\"peer\" \"timestamp_sec\") [] t-4)\n                                       (ap #result-fix.$.[0].issued_by! result-fix_flatten-3)\n                                      )\n                                      (call n-1 (\"trust-graph\" \"get_weight\") [result-fix_flatten-3 t-4] weight-2)\n                                     )\n                                     (par\n                                      (ap #result-fix.$.[0]! result-fix_flatten-4)\n                                      (ap #signature-fix.$.[0].signature.[0]! signature-fix_flatten-0)\n                                     )\n                                    )\n                                    (call n-1 (\"registry\" \"put_record\") [result-fix_flatten-4 t signature-fix_flatten-0 weight-2 t-4] result-5)\n                                   )\n                                   (xor\n                                    (match result-5.$.success! true\n                                     (ap true $successful)\n                                    )\n                                    (ap result-5.$.error! $error)\n                                   )\n                                  )\n                                 )\n                                )\n                                (call n-1 (\"op\" \"noop\") [])\n                               )\n                               (seq\n                                (call -relay- (\"op\" \"noop\") [])\n                                (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 11])\n                               )\n                              )\n                              (call -relay- (\"op\" \"noop\") [])\n                             )\n                             (next n-1)\n                            )\n                            (never)\n                           )\n                           (null)\n                          )\n                         )\n                         (new $status-0\n                          (new $result-6\n                           (seq\n                            (seq\n                             (seq\n                              (par\n                               (seq\n                                (seq\n                                 (call -relay- (\"math\" \"sub\") [1 1] sub-0)\n                                 (new $successful_test\n                                  (seq\n                                   (fold $successful s\n                                    (seq\n                                     (seq\n                                      (seq\n                                       (call -relay- (\"math\" \"add\") [sub-0 1] incr_idx)\n                                       (ap s $successful_test)\n                                      )\n                                      (canon -relay- $successful_test  #successful_iter_canon)\n                                     )\n                                     (xor\n                                      (match #successful_iter_canon.length incr_idx\n                                       (null)\n                                      )\n                                      (next s)\n                                     )\n                                    )\n                                    (never)\n                                   )\n                                   (canon -relay- $successful_test  #successful_result_canon)\n                                  )\n                                 )\n                                )\n                                (ap \"ok\" $status-0)\n                               )\n                               (call -relay- (\"peer\" \"timeout\") [6000 \"timeout\"] $status-0)\n                              )\n                              (new $status-0_test\n                               (seq\n                                (fold $status-0 s\n                                 (seq\n                                  (seq\n                                   (seq\n                                    (call -relay- (\"math\" \"add\") [0 1] incr_idx)\n                                    (ap s $status-0_test)\n                                   )\n                                   (canon -relay- $status-0_test  #status-0_iter_canon)\n                                  )\n                                  (xor\n                                   (match #status-0_iter_canon.length incr_idx\n                                    (null)\n                                   )\n                                   (next s)\n                                  )\n                                 )\n                                 (never)\n                                )\n                                (canon -relay- $status-0_test  #status-0_result_canon)\n                               )\n                              )\n                             )\n                             (xor\n                              (match #status-0_result_canon.$.[0]! \"ok\"\n                               (ap true $result-6)\n                              )\n                              (ap false $result-6)\n                             )\n                            )\n                            (canon -relay- $result-6  #result-fix-2)\n                           )\n                          )\n                         )\n                        )\n                        (ap #result-fix-2.$.[0]! $success)\n                       )\n                      )\n                     )\n                    )\n                   )\n                  )\n                 )\n                 (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 12])\n                )\n               )\n               (new $success_test\n                (seq\n                 (fold $success s\n                  (seq\n                   (seq\n                    (seq\n                     (call %init_peer_id% (\"math\" \"add\") [0 1] incr_idx)\n                     (ap s $success_test)\n                    )\n                    (canon %init_peer_id% $success_test  #success_iter_canon)\n                   )\n                   (xor\n                    (match #success_iter_canon.length incr_idx\n                     (null)\n                    )\n                    (next s)\n                   )\n                  )\n                  (never)\n                 )\n                 (canon %init_peer_id% $success_test  #success_result_canon)\n                )\n               )\n              )\n              (xor\n               (match #success_result_canon.$.[0]! false\n                (ap \"service hasn't registered: timeout exceeded\" $error)\n               )\n               (call %init_peer_id% (\"op\" \"noop\") [])\n              )\n             )\n            )\n            (canon %init_peer_id% $success  #success-fix)\n           )\n          )\n         )\n        )\n       )\n       (canon %init_peer_id% $error  #push-to-stream-18)\n      )\n      (ap #push-to-stream-18 $-some-unique-res-name-1)\n     )\n     (par\n      (ap #success_result_canon.$.[0]! success_result_canon_flatten)\n      (canon %init_peer_id% $-some-unique-res-name-1  #-some-unique-res-name-1_canon)\n     )\n    )\n    (call %init_peer_id% (\"--after-callback-srv-service--\" \"console-log\") [success_result_canon_flatten #-some-unique-res-name-1_canon])\n   )\n   (call %init_peer_id% (\"--finisher--\" \"--finish-execution--\") [])\n  )\n  (xor\n   (call %init_peer_id% (\"callbackSrv\" \"response\") [\"ok\"])\n   (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 13])\n  )\n )\n (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 14])\n)\n";

    let prev_data: InterpreterData = serde_json::from_str(PREV_DATA).unwrap();
    let trace = prev_data.trace.clone();
    let prev_data = serde_json::to_vec(&prev_data).unwrap();

    let current_data: InterpreterData = serde_json::from_str(CURRENT_DATA).unwrap();
    let current_data = serde_json::to_vec(&current_data).unwrap();

    println!("trace previous_data (states_count: {}): [", trace.len());
    for (id, state) in trace.iter().enumerate() {
        println!("  {}: {}", id, state);
    }
    println!("]");

    let test_run_paremeters = TestRunParameters::new("12D3KooWFTm82PPh3PVcMby2WvJgbCz59QPb7Zn9WEVQVFtiWF7v", 0, 0);
    let _result = checked_call_vm!(vm, test_run_paremeters, script, prev_data, current_data);
}
