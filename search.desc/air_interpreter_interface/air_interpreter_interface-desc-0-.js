searchState.loadedDescShard("air_interpreter_interface", 0, "Contains arguments of a call instruction and all other …\nThis is a map from a String to a service result for …\nRepresents an executed host function result.\nDescribes a result returned at the end of the interpreter …\nThese are RAM consumption related limits to be enforced by …\nParameters that a host side should pass to an interpreter …\nThis stores soft limits triggering flags.\nThe AIR script size limit.\nThis flag signals that AIR script size exceeds the limit.\nSerialized to JSON string Vec of arguments that should be …\nCollected parameters of all met call instructions that …\nThis is the limit for the size of service call result.\nThis flag signals that call result size exceeds the limit.\nPeer id of a current peer.\nContains script data that should be preserved in an …\nContains error message if ret_code != INTERPRETER_SUCCESS.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nName of a function from service identified by service_id …\nThis knob controls hard RAM limits behavior for AVMRunner.\nPeer id of a peer that start this particle.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA key format.\nPublic keys of peers that should receive data.\nUnique particle ID.\nThe particle data size limit.\nThis flag signals that particle data size exceeds the …\nResulted JValue serialized to a string. It’s impossible …\nA error code service or builtin returned, where …\nA return code, where INTERPRETER_SUCCESS means success.\nA secret key material.\nId of a service that should be called.\nSerialized to JSON string Vec&lt;Vec&gt; that should be passed …\nUnix timestamp from a particle in milliseconds. It …\nTTL set by init peer id in milliseconds.")