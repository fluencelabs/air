searchState.loadedDescShard("avm_server", 0, "Describes behaviour of the AVM.\nReturn statistic of AVM server Wasm module heap footprint.\nThis errors are encountered from serialization of data …\nAn array of values of the same type.\nA byte array.\nErrors from auxiliary calls.\nBoolean.\nBoolean value.\nSpecialization of arrays for byte vector.\nSpecialization of array type for byte vector.\nErrors encountered while trying to deserialize arguments …\nErrors encountered while trying to deserialize tetraplets …\nContains arguments of a call instruction and all other …\nThis error is encountered when deserialization pof call …\nErrors encountered while trying to serialize call results.\nThis errors are encountered from an call results/params …\nRepresents an executed host function result.\nThis trait is used for\nThis errors are encountered from a data store object.\nContains the error value\nContains the error value\nA 32-bits float.\nA 32-bits float.\nA 64-bits float.\nA 64-bits float.\nA 32-bits integer (as defined in WebAssembly core).\nA 32-bits integer (as defined in WebAssembly core).\nA 64-bits integer (as defined in WebAssembly core).\nA 64-bits integer (as defined in WebAssembly core).\nRepresents the types supported by WIT.\nA WIT value.\nMarine call returns Vec to support multi-value in a future,\nThis error contains interpreter outcome in case when …\nAIR interpreter result deserialization errors.\nSpecified path to AIR interpreter .wasm file was invalid\nInvalid secret key.\nThis errors are encountered from FaaS.\nAn error occurred when host functions tries to lift …\nAn error occurred when a host functions tries to lift …\nContains the success value\nContains the success value\nRepresents parameters obtained from a particle.\nA record contains record index from interfaces AST.\nA record.\nThis errors are encountered from an AVM runner.\nA 16-bits signed integer.\nA 16-bits signed integer.\nA 32-bits signed integer.\nA 32-bits signed integer.\nA 64-bits signed integer.\nA 64-bits signed integer.\nA 8-bits signed integer.\nA 8-bits signed integer.\nDescribes an origin that set corresponding value.\nThis stores soft limits triggering flags.\nA string.\nA string.\nA 16-bits unsigned integer.\nA 16-bits unsigned integer.\nA 32-bits unsigned integer.\nA 32-bits unsigned integer.\nA 64-bits unsigned integer.\nA 64-bits unsigned integer.\nA 8-bits unsigned integer.\nA 8-bits unsigned integer.\nPath to a AIR interpreter Wasm file.\nNumber of allocations rejected due to memory limit. May be …\nType of the closure arguments.\nArguments that should be passed to the function.\nCollected parameters of all met call instructions that …\nThis is the limit for the size of service call result.\nThis is the limit for the size of service call result.\nCleanup data that become obsolete.\nCleanup data that become obsolete.\nContains script data that should be preserved in an …\nReturns true if an anomaly happened and it’s necessary …\nIf Some, this closure is called with error when errors is …\nTime of a particle execution (it counts only execution …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nName of a function from service identified by service_id …\nName of a function that returned corresponding value.\nThis knob controls hard RAM limits behavior for AVMRunner.\nThis knob controls hard RAM limits behavior for AVMRunner.\nThis closure will be invoked for corresponding import.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nValue was produced by applying this <code>lens</code> to the output …\nCreate a tetraplet for string literals defined in the …\nMask used to filter logs, for details see <code>log_utf8_string</code> …\nMaximum heap size in bytes available for the interpreter.\nMemory in bytes AVM linear heap was extended during …\nSize of currently used linear memory in bytes. Please note …\nReturn memory stat of an interpreter heap.\nCreate AVM with provided config.\nPublic keys of peers that should receive data.\nTypes of output of the closure.\nThe particle data size limit.\nThe particle data size limit.\nId of a peer where corresponding value was set.\nResulted JValue returned by a service string.\nA error code service or builtin returned, where …\nId of a service that should be called.\nId of a service that set corresponding value.\nTo store and convey soft limits triggering flags.\nTetraplets that should be passed to the service.\nPossibly set max memory size for AVM server.\nThis struct is very similar to AVMOutcome, but keeps …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate AVM with the provided config.\n<code>NEVec&lt;T&gt;</code> represents a non-empty <code>Vec&lt;T&gt;</code>. It derefs to <code>Vec&lt;T&gt;</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConverts this NEVec into Vec\nCreates a new non-empty vector, based on an inner <code>Vec&lt;T&gt;</code>. …\nThis struct is very similar to AVMOutcome, but keeps …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")