searchState.loadedDescShard("air_trace_handler", 0, "Contains the error value\nErrors occurred while trying to access or pop elements …\nErrors occurred when {1} - 1{0}.fold_states_count …\nErrors occurred when {0}.fold_states_count + {1} overflows.\nErrors arose out while accessing various interpreter data.\nErrors bubbled from DataKeeper.\nErrors occurred when Fold FSM tries to obtain stream …\nErrors occurred when Fold FSM tries to obtain stream …\nContains the success value\nErrors occurred when ParResult.0 + ParResult.1 overflows.\nErrors occurred when ParResult.0 + ParResult.1 value is …\nErrors occurred when slider.position() + ParResult.0 + …\nError occurred while trying to access or pop elements from …\nErrors occurred when requested_subtrace_len != 0 &amp;&amp; …\nErrors occurred when trace_len - trace_position &lt; …\nErrors arose out of merging previous data with a new.\nErrors arose out of merging previous data with a new.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nShould be called when a call instruction was executed …\nShould be called at the beginning of a call execution.\nReturns size of elements inside result trace and intended …\nThere was a state in at least one of the contexts. If …\nMerger was expected to see other state that was obtained …\nThere is no corresponding state in a trace for this call.\nErrors occurred when one of the fold subtrace lore doesn’…\nErrors occurred when previous and current call results are …\nErrors occurred when previous and current executed states …\nError occurred when Ap results contains not 1 generation …\nErrors arose out of merging previous data with a new.\nThere was a state in at least one of the contexts. If …\nThere was a state in at least one of the contexts. If …\nThere is no corresponding state in a trace for this call.\nThere is no corresponding state in a trace for this call.\nThere are several lores with the same value_pos.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")