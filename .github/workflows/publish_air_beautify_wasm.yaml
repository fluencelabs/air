# run locally like this:
# act -b -P ubuntu-latest=nektos/act-environments-ubuntu:18.04 -j publish-air-beautify-wasm -s "NPM_TOKEN=uuid-uuid-uuid-uuid"

name: "publish-air-beautify-wasm"

on:
  push:
    branches:
      - "master"
    paths:
      - "tools/wasm/air-beautify-wasm/**"

jobs:
  npm-publish:
    name: "Publish air-beautify-wasm to NPM"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - run: cargo update --aggressive

      - name: Install jq & sponge
        run: sudo apt-get update && sudo apt-get --yes --force-yes install jq moreutils

      - name: Install toml-cli
        run: cargo install toml-cli

      - name: Get versions from local and npm, and take the highest one
        working-directory: tools/wasm/air-beautify-wasm
        run: |
          set -x

          # install semver and add it to PATH
          yarn global add semver
          PATH="$(yarn global bin):$PATH"

          # JQ version regex pattern
          PAT="\\\\d+.\\\\d+.\\\\d+"

          CARGO_TOML="Cargo.toml"

          # get package name and version from Cargo.toml
          PKG_NAME="$(toml get "$CARGO_TOML" package.name | tr -d \")"
          LOCAL_VERSION="$(toml get "$CARGO_TOML" package.version | tr -d \")"

          # get & increment version from NPM
          JS_VERSIONS=$(yarn info --silent "$PKG_NAME" versions | tr \' \" | jq -r ".[] | select(test(\"$PAT\"))" || true)
          JS_VERSION="$(semver -p $JS_VERSIONS | tail -n1)"
          NEXT_JS_VERSION="$(semver --increment patch "$JS_VERSION" || true)"

          # take the highest version
          MAX_VERSION="$(semver "$NEXT_JS_VERSION" "$LOCAL_VERSION" | tail -n1)"

          echo "FINAL_VERSION=$MAX_VERSION" | tee -a $GITHUB_ENV
          echo "JS_PKG_NAME=$JS_PKG_NAME" | tee -a $GITHUB_ENV

      - name: Setup wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: 'latest'

      - name: Set interpreter version to ${{ env.FINAL_VERSION }} before the build
        working-directory: tools/wasm/air-beautify-wasm
        run: |
          toml set Cargo.toml package.version "${{ env.FINAL_VERSION }}" | sponge Cargo.toml

      - name: Build air_interpreter_server.wasm for node
        working-directory: tools/wasm/air-beautify-wasm
        run: |
          rm -rf pkg
          wasm-pack build --release

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "14"
          registry-url: "https://registry.npmjs.org"

      - name: Publish to npm registry
        working-directory: tools/wasm/air-beautify-wasm/pkg
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public
