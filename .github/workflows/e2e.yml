name: "e2e"

on:
  pull_request:
    paths-ignore:
      - "**.md"
      - ".github/**"
      - "!.github/workflows/e2e.yml"
      - "!.github/workflows/snapshot.yml"
    types:
      - "labeled"
      - "synchronize"
      - "opened"
      - "reopened"

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  air-interpreter-wasm:
    name: "aquavm"
    if: github.event.pull_request.head.repo.fork != true && contains(github.event.pull_request.labels.*.name, 'e2e')
    uses: ./.github/workflows/snapshot-air-interpreter-wasm.yml
    with:
      ref: ${{ github.ref }}

  air-beautify-wasm:
    name: "aquavm"
    if: github.event.pull_request.head.repo.fork != true && contains(github.event.pull_request.labels.*.name, 'e2e')
    uses: ./.github/workflows/snapshot-air-beautify-wasm.yml
    with:
      ref: ${{ github.ref }}

  avm:
    name: "aquavm"
    if: github.event.pull_request.head.repo.fork != true && contains(github.event.pull_request.labels.*.name, 'e2e')
    needs: air-interpreter-wasm
    uses: ./.github/workflows/snapshot-avm.yml
    with:
      ref: ${{ github.ref }}

  cargo:
    name: "aquavm"
    if: github.event.pull_request.head.repo.fork != true && contains(github.event.pull_request.labels.*.name, 'e2e')
    needs: air-interpreter-wasm
    uses: ./.github/workflows/snapshot-cargo.yml
    with:
      ref: ${{ github.ref }}

  rust-peer:
    needs:
      - cargo

    uses: fluencelabs/rust-peer/.github/workflows/build.yml@master
    with:
      cargo-dependencies: |
        [
          {
            "package": "avm-server",
            "version": "=${{ needs.cargo.outputs.version }}",
            "registry": "fluence"
          },
          {
            "package": "air-interpreter-wasm",
            "version": "=${{ needs.cargo.outputs.version }}",
            "registry": "fluence"
          }
        ]

  rust-peer-snapshot:
    name: "rust-peer"
    needs:
      - rust-peer

    uses: fluencelabs/rust-peer/.github/workflows/container.yml@master
    with:
      image-name: "docker.fluence.dev/aquavm"
      flavour: "minimal"
      rust-peer-sha: "${{ needs.rust-peer.outputs.rust-peer-sha }}"

  rust-peer-tests:
    name: "rust-peer"
    needs:
      - cargo

    uses: fluencelabs/rust-peer/.github/workflows/tests.yml@master
    with:
      cargo-dependencies: |
        [
          {
            "package": "avm-server",
            "version": "=${{ needs.cargo.outputs.version }}",
            "registry": "fluence"
          },
          {
            "package": "air-interpreter-wasm",
            "version": "=${{ needs.cargo.outputs.version }}",
            "registry": "fluence"
          }
        ]

  js-client-tests:
    name: "js-client"
    needs:
      - avm
      - rust-peer-snapshot

    uses: fluencelabs/js-client/.github/workflows/tests.yml@master
    with:
      avm-version: "${{ needs.avm.outputs.version }}"
      rust-peer-image: "${{ needs.rust-peer-snapshot.outputs.rust-peer-image }}"

  js-client:
    needs:
      - avm

    uses: fluencelabs/js-client/.github/workflows/snapshot.yml@master
    with:
      avm-version: "${{ needs.avm.outputs.version }}"

  aqua-playground:
    needs:
      - js-client
      - rust-peer-snapshot

    uses: fluencelabs/aqua-playground/.github/workflows/tests.yml@master
    with:
      js-client-snapshots: "${{ needs.js-client.outputs.js-client-snapshots }}"
      rust-peer-image: "${{ needs.rust-peer-snapshot.outputs.rust-peer-image }}"

  # registry:
  #   needs:
  #     - rust-peer-snapshot

  #   uses: fluencelabs/registry/.github/workflows/tests.yml@main
  #   with:
  #     rust-peer-image: "${{ needs.rust-peer-snapshot.outputs.rust-peer-image }}"

  fluence-cli:
    needs:
      - rust-peer-snapshot
      - js-client

    uses: fluencelabs/fluence-cli/.github/workflows/tests.yml@FLU-312
    with:
      rust-peer-image: "${{ needs.rust-peer-snapshot.outputs.rust-peer-image }}"
      js-client-snapshots: "${{ needs.js-client.outputs.js-client-snapshots }}"
